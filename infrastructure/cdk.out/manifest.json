{
  "version": "48.0.0",
  "artifacts": {
    "RAG-Data-prod.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "RAG-Data-prod.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "RAG-Data-prod": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://375004070918/us-east-1",
      "properties": {
        "templateFile": "RAG-Data-prod.template.json",
        "terminationProtection": false,
        "tags": {
          "ManagedBy": "CDK",
          "Project": "RAG",
          "Stage": "prod",
          "Version": "V2"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::375004070918:role/cdk-hnb659fds-deploy-role-375004070918-us-east-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::375004070918:role/cdk-hnb659fds-cfn-exec-role-375004070918-us-east-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-375004070918-us-east-1/9ebe483632cc5205c5892df807ea18dd1005f6133f67d8d6cbf1fe14328e42b9.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "RAG-Data-prod.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::375004070918:role/cdk-hnb659fds-lookup-role-375004070918-us-east-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "RAG-Data-prod.assets"
      ],
      "metadata": {
        "/RAG-Data-prod": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "ManagedBy",
                "Value": "CDK"
              },
              {
                "Key": "Project",
                "Value": "RAG"
              },
              {
                "Key": "Stage",
                "Value": "prod"
              },
              {
                "Key": "Version",
                "Value": "V2"
              }
            ]
          }
        ],
        "/RAG-Data-prod/DocumentBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DocumentBucketAE41E5A9"
          }
        ],
        "/RAG-Data-prod/DocumentBucket/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DocumentBucketPolicyBF1D786A"
          }
        ],
        "/RAG-Data-prod/DocumentBucket/AutoDeleteObjectsCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DocumentBucketAutoDeleteObjectsCustomResourceEE0C7BB4"
          }
        ],
        "/RAG-Data-prod/Custom::S3AutoDeleteObjectsCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/RAG-Data-prod/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
          }
        ],
        "/RAG-Data-prod/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F"
          }
        ],
        "/RAG-Data-prod/SessionTable": [
          {
            "type": "aws:cdk:hasPhysicalName",
            "data": {
              "Ref": "SessionTableA016F679"
            }
          }
        ],
        "/RAG-Data-prod/SessionTable/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SessionTableA016F679"
          }
        ],
        "/RAG-Data-prod/DocumentMetadataTable": [
          {
            "type": "aws:cdk:hasPhysicalName",
            "data": {
              "Ref": "DocumentMetadataTable6ED808AA"
            }
          }
        ],
        "/RAG-Data-prod/DocumentMetadataTable/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DocumentMetadataTable6ED808AA"
          }
        ],
        "/RAG-Data-prod/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/RAG-Data-prod/Exports/Output{\"Fn::GetAtt\":[\"DocumentBucketAE41E5A9\",\"Arn\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttDocumentBucketAE41E5A9ArnF6A03022"
          }
        ],
        "/RAG-Data-prod/Exports/Output{\"Ref\":\"DocumentBucketAE41E5A9\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefDocumentBucketAE41E5A9880EA18D"
          }
        ],
        "/RAG-Data-prod/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/RAG-Data-prod/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "RAG-Data-prod"
    },
    "RAG-API-prod.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "RAG-API-prod.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "RAG-API-prod": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://375004070918/us-east-1",
      "properties": {
        "templateFile": "RAG-API-prod.template.json",
        "terminationProtection": false,
        "tags": {
          "ManagedBy": "CDK",
          "Project": "RAG",
          "Stage": "prod",
          "Version": "V2"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::375004070918:role/cdk-hnb659fds-deploy-role-375004070918-us-east-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::375004070918:role/cdk-hnb659fds-cfn-exec-role-375004070918-us-east-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-375004070918-us-east-1/1c7eddf82a112167ff6a8ba9a2324fdc0344ad5f47a85483152a503b534e9e30.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "RAG-API-prod.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::375004070918:role/cdk-hnb659fds-lookup-role-375004070918-us-east-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "RAG-Data-prod",
        "RAG-API-prod.assets"
      ],
      "metadata": {
        "/RAG-API-prod": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "ManagedBy",
                "Value": "CDK"
              },
              {
                "Key": "Project",
                "Value": "RAG"
              },
              {
                "Key": "Stage",
                "Value": "prod"
              },
              {
                "Key": "Version",
                "Value": "V2"
              }
            ]
          }
        ],
        "/RAG-API-prod/LambdaExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LambdaExecutionRoleD5C26073"
          }
        ],
        "/RAG-API-prod/LambdaExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LambdaExecutionRoleDefaultPolicy6D69732F"
          }
        ],
        "/RAG-API-prod/QueryFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "QueryFunctionBDF4DE5B"
          }
        ],
        "/RAG-API-prod/QueryFunction/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "QueryFunctionLogRetention61CDE44D"
          }
        ],
        "/RAG-API-prod/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
          }
        ],
        "/RAG-API-prod/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB"
          }
        ],
        "/RAG-API-prod/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A"
          }
        ],
        "/RAG-API-prod/IngestFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "IngestFunction4B2F2EB2"
          }
        ],
        "/RAG-API-prod/IngestFunction/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "IngestFunctionLogRetention6453669D"
          }
        ],
        "/RAG-API-prod/HealthFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HealthFunction19D7724A"
          }
        ],
        "/RAG-API-prod/HealthFunction/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HealthFunctionLogRetentionC7891B18"
          }
        ],
        "/RAG-API-prod/RagApi/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApiDA20095C"
          }
        ],
        "/RAG-API-prod/RagApi/Deployment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApiDeploymentF0C2F69745d1dc0d7456643161ce3ebd001f73ea"
          }
        ],
        "/RAG-API-prod/RagApi/DeploymentStage.prod/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApiDeploymentStageprodF300773B"
          }
        ],
        "/RAG-API-prod/RagApi/Endpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApiEndpointB6AED592"
          }
        ],
        "/RAG-API-prod/RagApi/Default/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApiOPTIONSB0A357B5"
          }
        ],
        "/RAG-API-prod/RagApi/Default/health/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApihealth5A7F792F"
          }
        ],
        "/RAG-API-prod/RagApi/Default/health/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApihealthOPTIONSC415AEDF"
          }
        ],
        "/RAG-API-prod/RagApi/Default/health/GET/ApiPermission.RAGAPIprodRagApiEA9262F2.GET..health": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApihealthGETApiPermissionRAGAPIprodRagApiEA9262F2GEThealthA4E333C3"
          }
        ],
        "/RAG-API-prod/RagApi/Default/health/GET/ApiPermission.Test.RAGAPIprodRagApiEA9262F2.GET..health": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApihealthGETApiPermissionTestRAGAPIprodRagApiEA9262F2GEThealth9A7D8977"
          }
        ],
        "/RAG-API-prod/RagApi/Default/health/GET/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApihealthGETA140D138"
          }
        ],
        "/RAG-API-prod/RagApi/Default/query/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApiquery835A1EE8"
          }
        ],
        "/RAG-API-prod/RagApi/Default/query/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApiqueryOPTIONSB632B444"
          }
        ],
        "/RAG-API-prod/RagApi/Default/query/POST/ApiPermission.RAGAPIprodRagApiEA9262F2.POST..query": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApiqueryPOSTApiPermissionRAGAPIprodRagApiEA9262F2POSTqueryCB215BC6"
          }
        ],
        "/RAG-API-prod/RagApi/Default/query/POST/ApiPermission.Test.RAGAPIprodRagApiEA9262F2.POST..query": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApiqueryPOSTApiPermissionTestRAGAPIprodRagApiEA9262F2POSTquery44E93D2C"
          }
        ],
        "/RAG-API-prod/RagApi/Default/query/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApiqueryPOST61F1CD4F"
          }
        ],
        "/RAG-API-prod/RagApi/Default/documents/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApidocumentsF1E1EF00"
          }
        ],
        "/RAG-API-prod/RagApi/Default/documents/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApidocumentsOPTIONSD8DD2804"
          }
        ],
        "/RAG-API-prod/RagApi/Default/documents/POST/ApiPermission.RAGAPIprodRagApiEA9262F2.POST..documents": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApidocumentsPOSTApiPermissionRAGAPIprodRagApiEA9262F2POSTdocuments12F1E953"
          }
        ],
        "/RAG-API-prod/RagApi/Default/documents/POST/ApiPermission.Test.RAGAPIprodRagApiEA9262F2.POST..documents": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApidocumentsPOSTApiPermissionTestRAGAPIprodRagApiEA9262F2POSTdocuments60A4DBB8"
          }
        ],
        "/RAG-API-prod/RagApi/Default/documents/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApidocumentsPOST53EC14E4"
          }
        ],
        "/RAG-API-prod/RagApi/Default/documents/GET/ApiPermission.RAGAPIprodRagApiEA9262F2.GET..documents": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApidocumentsGETApiPermissionRAGAPIprodRagApiEA9262F2GETdocumentsC8664BB5"
          }
        ],
        "/RAG-API-prod/RagApi/Default/documents/GET/ApiPermission.Test.RAGAPIprodRagApiEA9262F2.GET..documents": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApidocumentsGETApiPermissionTestRAGAPIprodRagApiEA9262F2GETdocumentsE410065D"
          }
        ],
        "/RAG-API-prod/RagApi/Default/documents/GET/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApidocumentsGET33A3316B"
          }
        ],
        "/RAG-API-prod/RagApi/Default/documents/{proxy+}/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApidocumentsproxyD2218942"
          }
        ],
        "/RAG-API-prod/RagApi/Default/documents/{proxy+}/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApidocumentsproxyOPTIONSC06399FB"
          }
        ],
        "/RAG-API-prod/RagApi/Default/documents/{proxy+}/DELETE/ApiPermission.RAGAPIprodRagApiEA9262F2.DELETE..documents.{proxy+}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApidocumentsproxyDELETEApiPermissionRAGAPIprodRagApiEA9262F2DELETEdocumentsproxy7C1CAF6A"
          }
        ],
        "/RAG-API-prod/RagApi/Default/documents/{proxy+}/DELETE/ApiPermission.Test.RAGAPIprodRagApiEA9262F2.DELETE..documents.{proxy+}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApidocumentsproxyDELETEApiPermissionTestRAGAPIprodRagApiEA9262F2DELETEdocumentsproxyE1A0E2A1"
          }
        ],
        "/RAG-API-prod/RagApi/Default/documents/{proxy+}/DELETE/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApidocumentsproxyDELETE1FDCC6F5"
          }
        ],
        "/RAG-API-prod/RagApi/Default/search/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApisearchF16A6584"
          }
        ],
        "/RAG-API-prod/RagApi/Default/search/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApisearchOPTIONS8D492A60"
          }
        ],
        "/RAG-API-prod/RagApi/Default/search/POST/ApiPermission.RAGAPIprodRagApiEA9262F2.POST..search": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApisearchPOSTApiPermissionRAGAPIprodRagApiEA9262F2POSTsearchA9105D54"
          }
        ],
        "/RAG-API-prod/RagApi/Default/search/POST/ApiPermission.Test.RAGAPIprodRagApiEA9262F2.POST..search": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApisearchPOSTApiPermissionTestRAGAPIprodRagApiEA9262F2POSTsearchE9186A8C"
          }
        ],
        "/RAG-API-prod/RagApi/Default/search/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApisearchPOST5DB3DD35"
          }
        ],
        "/RAG-API-prod/RagApi/Default/stats/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApistats27511A80"
          }
        ],
        "/RAG-API-prod/RagApi/Default/stats/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApistatsOPTIONSD96F48DB"
          }
        ],
        "/RAG-API-prod/RagApi/Default/stats/GET/ApiPermission.RAGAPIprodRagApiEA9262F2.GET..stats": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApistatsGETApiPermissionRAGAPIprodRagApiEA9262F2GETstatsF162191C"
          }
        ],
        "/RAG-API-prod/RagApi/Default/stats/GET/ApiPermission.Test.RAGAPIprodRagApiEA9262F2.GET..stats": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApistatsGETApiPermissionTestRAGAPIprodRagApiEA9262F2GETstats6181904B"
          }
        ],
        "/RAG-API-prod/RagApi/Default/stats/GET/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RagApistatsGET53EAD069"
          }
        ],
        "/RAG-API-prod/ListDocsFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListDocsFunction22D59F26"
          }
        ],
        "/RAG-API-prod/DeleteDocFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DeleteDocFunctionE3E59255"
          }
        ],
        "/RAG-API-prod/DeleteDocFunction/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DeleteDocFunctionLogRetention7E7A34D5"
          }
        ],
        "/RAG-API-prod/StatsFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "StatsFunctionE4A6FC3A"
          }
        ],
        "/RAG-API-prod/ApiUrl": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiUrl"
          }
        ],
        "/RAG-API-prod/ApiId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiId"
          }
        ],
        "/RAG-API-prod/QueryFunctionArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "QueryFunctionArn"
          }
        ],
        "/RAG-API-prod/QueryFunctionName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "QueryFunctionName"
          }
        ],
        "/RAG-API-prod/IngestFunctionArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "IngestFunctionArn"
          }
        ],
        "/RAG-API-prod/IngestFunctionName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "IngestFunctionName"
          }
        ],
        "/RAG-API-prod/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/RAG-API-prod/Exports/Output{\"Ref\":\"RagApiDA20095C\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefRagApiDA20095C1B4F0205"
          }
        ],
        "/RAG-API-prod/Exports/Output{\"Ref\":\"RagApiDeploymentStageprodF300773B\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefRagApiDeploymentStageprodF300773B9256974A"
          }
        ],
        "/RAG-API-prod/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/RAG-API-prod/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "RAG-API-prod"
    },
    "RAG-Web-prod.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "RAG-Web-prod.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "RAG-Web-prod": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://375004070918/us-east-1",
      "properties": {
        "templateFile": "RAG-Web-prod.template.json",
        "terminationProtection": false,
        "tags": {
          "ManagedBy": "CDK",
          "Project": "RAG",
          "Stage": "prod",
          "Version": "V2"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::375004070918:role/cdk-hnb659fds-deploy-role-375004070918-us-east-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::375004070918:role/cdk-hnb659fds-cfn-exec-role-375004070918-us-east-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-375004070918-us-east-1/c7b6c1b4763c54397c5124d38a8d47fbb4fd04d24d72ecd78d6ea25719244c7e.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "RAG-Web-prod.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::375004070918:role/cdk-hnb659fds-lookup-role-375004070918-us-east-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "RAG-API-prod",
        "RAG-Web-prod.assets"
      ],
      "metadata": {
        "/RAG-Web-prod": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "ManagedBy",
                "Value": "CDK"
              },
              {
                "Key": "Project",
                "Value": "RAG"
              },
              {
                "Key": "Stage",
                "Value": "prod"
              },
              {
                "Key": "Version",
                "Value": "V2"
              }
            ]
          }
        ],
        "/RAG-Web-prod/WebBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "WebBucket12880F5B"
          }
        ],
        "/RAG-Web-prod/WebBucket/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "WebBucketPolicy95D08FAA"
          }
        ],
        "/RAG-Web-prod/WebBucket/AutoDeleteObjectsCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "WebBucketAutoDeleteObjectsCustomResource9C1A079F"
          }
        ],
        "/RAG-Web-prod/Custom::S3AutoDeleteObjectsCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/RAG-Web-prod/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
          }
        ],
        "/RAG-Web-prod/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F"
          }
        ],
        "/RAG-Web-prod/WebOAI/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "WebOAI6A7C4516"
          }
        ],
        "/RAG-Web-prod/ResponseHeadersPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ResponseHeadersPolicy13DBF9E0"
          }
        ],
        "/RAG-Web-prod/CachePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CachePolicy26D8A535"
          }
        ],
        "/RAG-Web-prod/WebDistribution/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "WebDistribution59C46482"
          }
        ],
        "/RAG-Web-prod/WebDeployment/AwsCliLayer/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "WebDeploymentAwsCliLayer79C1EFEA"
          }
        ],
        "/RAG-Web-prod/WebDeployment/CustomResource-512MiB-1024MiB/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "WebDeploymentCustomResource512MiB1024MiB08CD1927"
          }
        ],
        "/RAG-Web-prod/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiB": [
          {
            "type": "aws:cdk:is-custom-resource-handler-singleton",
            "data": true
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-runtime-family",
            "data": 2
          }
        ],
        "/RAG-Web-prod/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiB/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiBServiceRole5F7A526E"
          }
        ],
        "/RAG-Web-prod/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiB/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiBServiceRoleDefaultPolicy5878A191"
          }
        ],
        "/RAG-Web-prod/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiB/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiB439D638D"
          }
        ],
        "/RAG-Web-prod/CloudFrontURL": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CloudFrontURL"
          }
        ],
        "/RAG-Web-prod/CloudFrontDistributionId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CloudFrontDistributionId"
          }
        ],
        "/RAG-Web-prod/S3BucketName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "S3BucketName"
          }
        ],
        "/RAG-Web-prod/OAIId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OAIId"
          }
        ],
        "/RAG-Web-prod/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/RAG-Web-prod/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/RAG-Web-prod/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "RAG-Web-prod"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/core:enableStackNameDuplicates": {
            "recommendedValue": true,
            "explanation": "Allow multiple stacks with the same name",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "aws-cdk:enableDiffNoFail": {
            "recommendedValue": true,
            "explanation": "Make `cdk diff` not fail when there are differences",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecr-assets:dockerIgnoreSupport": {
            "recommendedValue": true,
            "explanation": "DockerImageAsset properly supports `.dockerignore` files by default",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-secretsmanager:parseOwnedSecretName": {
            "recommendedValue": true,
            "explanation": "Fix the referencing of SecretsManager names from ARNs",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-kms:defaultKeyPolicies": {
            "recommendedValue": true,
            "explanation": "Tighten default KMS key policies",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-s3:grantWriteWithoutAcl": {
            "recommendedValue": true,
            "explanation": "Remove `PutObjectAcl` from Bucket.grantWrite",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecs-patterns:removeDefaultDesiredCount": {
            "recommendedValue": true,
            "explanation": "Do not specify a default DesiredCount for ECS services",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-efs:defaultEncryptionAtRest": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have elastic file systems encrypted at rest by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "userValue": [
              "aws",
              "aws-cn"
            ],
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs.",
            "unconfiguredBehavesLike": {
              "v2": false
            }
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration",
            "unconfiguredBehavesLike": {
              "v2": false
            }
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function",
            "unconfiguredBehavesLike": {
              "v2": false
            }
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1024.0"
}