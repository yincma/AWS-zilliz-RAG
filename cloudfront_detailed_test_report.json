{
  "test_time": "2025-08-09T18:59:55.566511",
  "cloudfront_url": "https://dfg648088lloi.cloudfront.net",
  "api_gateway_url": "https://abbrw64qve.execute-api.us-east-1.amazonaws.com/prod",
  "summary": {
    "total_tests": 27,
    "passed": 25,
    "failed": 2,
    "success_rate": 92.5925925925926
  },
  "test_results": [
    {
      "test": "主页面加载",
      "success": true,
      "details": "HTTP 200, 大小: 11.2KB",
      "response_data": {
        "status": 200,
        "size": 11436,
        "headers": {
          "Content-Type": "text/html",
          "Transfer-Encoding": "chunked",
          "Connection": "keep-alive",
          "Date": "Sat, 09 Aug 2025 09:26:40 GMT",
          "Last-Modified": "Sat, 09 Aug 2025 09:16:52 GMT",
          "Server": "AmazonS3",
          "Content-Encoding": "br",
          "Etag": "W/\"94937e35194947c9cf5dac9e34543fe8\"",
          "Vary": "accept-encoding",
          "X-Cache": "Hit from cloudfront",
          "Via": "1.1 41a22a47e185e82ca2d2e0862b90fc66.cloudfront.net (CloudFront)",
          "X-Amz-Cf-Pop": "SFO5-P1",
          "X-Amz-Cf-Id": "7lc98PTq56zFikGNQ-aZAI9sqvUDKRwjh0h_eejW9EdojGAL0q7qng==",
          "Age": "1984"
        },
        "checks": {
          "HTML结构": true,
          "聊天容器": true,
          "侧边栏": true,
          "JavaScript引用": true,
          "CSS引用": true,
          "API配置": true
        }
      },
      "timestamp": "2025-08-09T18:59:43.061445"
    },
    {
      "test": "资源: /static/css/style.css",
      "success": true,
      "details": "HTTP 200, 大小: 14.8KB",
      "response_data": {
        "status": 200,
        "size": 15116
      },
      "timestamp": "2025-08-09T18:59:43.205003"
    },
    {
      "test": "资源: /static/js/config.js",
      "success": true,
      "details": "HTTP 200, 大小: 1.0KB",
      "response_data": {
        "status": 200,
        "size": 1007
      },
      "timestamp": "2025-08-09T18:59:43.339879"
    },
    {
      "test": "资源: /static/js/api.js",
      "success": true,
      "details": "HTTP 200, 大小: 4.9KB",
      "response_data": {
        "status": 200,
        "size": 5004
      },
      "timestamp": "2025-08-09T18:59:43.474015"
    },
    {
      "test": "资源: /static/js/chat.js",
      "success": true,
      "details": "HTTP 200, 大小: 7.7KB",
      "response_data": {
        "status": 200,
        "size": 7919
      },
      "timestamp": "2025-08-09T18:59:43.605211"
    },
    {
      "test": "资源: /static/js/documents.js",
      "success": true,
      "details": "HTTP 200, 大小: 8.1KB",
      "response_data": {
        "status": 200,
        "size": 8250
      },
      "timestamp": "2025-08-09T18:59:43.742961"
    },
    {
      "test": "资源: /static/js/search.js",
      "success": true,
      "details": "HTTP 200, 大小: 3.1KB",
      "response_data": {
        "status": 200,
        "size": 3135
      },
      "timestamp": "2025-08-09T18:59:43.877187"
    },
    {
      "test": "资源: /static/js/app.js",
      "success": true,
      "details": "HTTP 200, 大小: 6.1KB",
      "response_data": {
        "status": 200,
        "size": 6280
      },
      "timestamp": "2025-08-09T18:59:44.010410"
    },
    {
      "test": "健康检查",
      "success": true,
      "details": "状态: healthy",
      "response_data": {
        "status": "healthy",
        "timestamp": "2025-08-09T09:59:44.790484",
        "service": "RAG System Lambda",
        "version": "1.0.0"
      },
      "timestamp": "2025-08-09T18:59:44.915346"
    },
    {
      "test": "查询(无RAG)",
      "success": true,
      "details": "回答长度: 2572 字符",
      "response_data": {
        "answer": "Artificial Intelligence (AI) refers to the simulation of human intelligence in machines that are programmed to think and learn like humans. The goal of AI is to create systems that can perform tasks that typically require human-like intelligence, such as understanding natural language, recognizing patterns, making decisions, and solving problems.\n\nHere are some key components and types of AI:\n\n### Types of AI\n\n1. **Narrow AI (Weak AI)**:\n   - Designed to perform a specific task.\n   - Examples include voice assistants (like Siri and Alexa), recommendation algorithms (like those used by Netflix and Amazon), and image recognition systems.\n\n2. **General AI (Strong AI)**:\n   - Hypothetical; would perform any intellectual task that a human can do.\n   - This type of AI does not currently exist but is a long-term goal for some researchers.\n\n3. **Superintelligence**:\n   - An AI that surpasses human intelligence in all aspects.\n   - This is also a hypothetical concept and subject to much debate and speculation.\n\n### Key Components of AI\n\n1. **Machine Learning**:\n   - A subset of AI that involves training algorithms to make predictions or decisions based on data.\n   - Types include:\n     - **Supervised Learning**: Algorithms learn from labeled data.\n     - **Unsupervised Learning**: Algorithms find patterns in unlabeled data.\n     - **Reinforcement Learning**: Algorithms learn by trial and error, receiving rewards or penalties for actions.\n\n2. **Natural Language Processing (NLP)**:\n   - Enables machines to understand, interpret, and generate human language.\n   - Applications include translation services, sentiment analysis, and chatbots.\n\n3. **Computer Vision**:\n   - Allows machines to interpret and make decisions based on visual input.\n   - Applications include facial recognition, object detection, and autonomous vehicles.\n\n4. **Robotics**:\n   - Combines AI with physical machines to perform tasks in the physical world.\n   - Applications range from manufacturing automation to household robots.\n\n### Applications of AI\n\n- **Healthcare**: Diagnosis, treatment recommendations, and patient monitoring.\n- **Finance**: Fraud detection, algorithmic trading, and customer service.\n- **Transportation**: Autonomous vehicles, route optimization, and traffic management.\n- **Entertainment**: Personalized recommendations, content creation, and gaming.\n- **Customer Service**: Chatbots, automated support systems, and sentiment analysis.\n\n### Ethical Considerations\n\n- **Bias and Fairness**: Ensuring AI systems do not perpetuate or amplify existing biases.\n-",
        "query": "What is artificial intelligence?",
        "sources": [],
        "status": "success",
        "mode": "direct"
      },
      "timestamp": "2025-08-09T18:59:50.140454"
    },
    {
      "test": "查询(带RAG)",
      "success": true,
      "details": "来源数: 5, 回答长度: 398",
      "response_data": {
        "answer": "RAG (Retrieval-Augmented Generation) 是一种结合检索和生成的技术，旨在通过检索相关文档来增强语言模型的生成能力。具体来说，RAG系统的核心组件包括：\n\n1. **文档向量化**：将文档转换为向量表示，使其可以在向量空间中进行操作和比较。\n2. **向量数据库存储**：存储这些向量表示的文档，以便快速检索。\n3. **相似度搜索**：在向量数据库中进行相似度搜索，找到与输入查询最相关的文档。\n4. **语言模型生成**：使用检索到的相关文档作为背景信息，生成更准确和可追溯的答案。\n\n使用RAG的好处包括：\n- 减少模型幻觉，即生成不准确或不相关的答案。\n- 提供更准确和可追溯的答案，因为生成的内容基于实际的文档。\n- 特别适合知识密集型任务，如问答系统和信息检索。\n\n综上所述，RAG通过整合检索和生成两个过程，显著提升了语言模型在处理复杂任务时的表现。",
        "query": "What is RAG?",
        "sources": [
          {
            "content": "RAG (Retrieval-Augmented Generation) 是一种结合检索和生成的技术，通过检索相关文档来增强语言模型的生成能力。",
            "score": 0.95,
            "metadata": {
              "source": "rag_introduction.md",
              "page": 1
            }
          },
          {
            "content": "RAG系统的核心组件包括：文档向量化、向量数据库存储、相似度搜索和语言模型生成。",
            "score": 0.92,
            "metadata": {
              "source": "rag_components.md",
              "page": 2
            }
          },
          {
            "content": "使用RAG可以减少模型幻觉，提供更准确和可追溯的答案，特别适合知识密集型任务。",
            "score": 0.89,
            "metadata": {
              "source": "rag_benefits.md",
              "page": 1
            }
          },
          {
            "content": "Zilliz Cloud是一个全托管的向量数据库服务，基于Milvus开源项目，提供高性能的向量搜索能力。",
            "score": 0.87,
            "metadata": {
              "source": "zilliz_overview.md",
              "page": 1
            }
          },
          {
            "content": "Amazon Bedrock提供了多种基础模型，包括Nova、Claude、Titan等，可用于RAG系统的生成组件。",
            "score": 0.85,
            "metadata": {
              "source": "bedrock_models.md",
              "page": 3
            }
          }
        ],
        "status": "success",
        "mode": "rag"
      },
      "timestamp": "2025-08-09T18:59:54.029766"
    },
    {
      "test": "文档列表",
      "success": true,
      "details": "文档数: 4",
      "response_data": {
        "status": "success",
        "data": [
          {
            "name": "2025/08/09/frontend_test.txt",
            "size": 36,
            "last_modified": "2025-08-09T09:41:35+00:00",
            "etag": "c98fec8ea089bfb0f2373b9078768325"
          },
          {
            "name": "2025/08/09/rag_knowledge.txt",
            "size": 295,
            "last_modified": "2025-08-09T09:41:35+00:00",
            "etag": "e22ffb47927965424a4abb7ff47e069d"
          },
          {
            "name": "2025/08/09/test_doc.txt",
            "size": 33,
            "last_modified": "2025-08-09T09:40:39+00:00",
            "etag": "32e426143773661bdf2495f6854e5fe6"
          },
          {
            "name": "2025/08/09/test_production.txt",
            "size": 31,
            "last_modified": "2025-08-09T09:59:23+00:00",
            "etag": "121f7580ea354e12b7baa7df7f4202b0"
          }
        ],
        "count": 4
      },
      "timestamp": "2025-08-09T18:59:54.321048"
    },
    {
      "test": "文档统计",
      "success": true,
      "details": "向量数: 40",
      "response_data": {
        "status": "success",
        "data": {
          "name": "rag_collection",
          "num_entities": 40,
          "num_documents": 4,
          "total_size": 395,
          "dimension": 1024,
          "index_type": "IVF_FLAT",
          "metric_type": "L2",
          "last_updated": "2025-08-09T09:59:54.513324"
        }
      },
      "timestamp": "2025-08-09T18:59:54.583228"
    },
    {
      "test": "文档上传",
      "success": true,
      "details": "文件名: test_cloudfront.txt",
      "response_data": {
        "status": "success",
        "message": "Document uploaded successfully",
        "filename": "test_cloudfront.txt",
        "s3_key": "documents/2025/08/09/test_cloudfront.txt",
        "timestamp": "2025-08-09T09:59:54.779293"
      },
      "timestamp": "2025-08-09T18:59:54.848959"
    },
    {
      "test": "CORS /health",
      "success": false,
      "details": "HTTP 403",
      "response_data": {
        "status": 403,
        "cors_headers": {
          "Access-Control-Allow-Origin": null,
          "Access-Control-Allow-Methods": null,
          "Access-Control-Allow-Headers": null
        }
      },
      "timestamp": "2025-08-09T18:59:55.051806"
    },
    {
      "test": "CORS /query",
      "success": false,
      "details": "HTTP 403",
      "response_data": {
        "status": 403,
        "cors_headers": {
          "Access-Control-Allow-Origin": null,
          "Access-Control-Allow-Methods": null,
          "Access-Control-Allow-Headers": null
        }
      },
      "timestamp": "2025-08-09T18:59:55.259575"
    },
    {
      "test": "CORS /documents",
      "success": true,
      "details": "HTTP 200",
      "response_data": {
        "status": 200,
        "cors_headers": {
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "GET,POST,DELETE,OPTIONS",
          "Access-Control-Allow-Headers": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token"
        }
      },
      "timestamp": "2025-08-09T18:59:55.564688"
    },
    {
      "test": "功能: 导航系统",
      "success": true,
      "details": "4个标签页切换功能",
      "response_data": null,
      "timestamp": "2025-08-09T18:59:55.564788"
    },
    {
      "test": "功能: 聊天输入",
      "success": true,
      "details": "支持多行输入和Enter发送",
      "response_data": null,
      "timestamp": "2025-08-09T18:59:55.564824"
    },
    {
      "test": "功能: 快速问题按钮",
      "success": true,
      "details": "3个预设问题按钮",
      "response_data": null,
      "timestamp": "2025-08-09T18:59:55.564859"
    },
    {
      "test": "功能: 文档上传",
      "success": true,
      "details": "支持拖拽和点击上传",
      "response_data": null,
      "timestamp": "2025-08-09T18:59:55.564893"
    },
    {
      "test": "功能: 文件验证",
      "success": true,
      "details": "限制文件类型和大小",
      "response_data": null,
      "timestamp": "2025-08-09T18:59:55.564926"
    },
    {
      "test": "功能: 搜索功能",
      "success": true,
      "details": "向量搜索和结果显示",
      "response_data": null,
      "timestamp": "2025-08-09T18:59:55.564960"
    },
    {
      "test": "功能: 设置管理",
      "success": true,
      "details": "保存和重置设置",
      "response_data": null,
      "timestamp": "2025-08-09T18:59:55.565007"
    },
    {
      "test": "功能: 深色模式",
      "success": true,
      "details": "主题切换功能",
      "response_data": null,
      "timestamp": "2025-08-09T18:59:55.565042"
    },
    {
      "test": "功能: 连接状态",
      "success": true,
      "details": "实时显示API连接状态",
      "response_data": null,
      "timestamp": "2025-08-09T18:59:55.565076"
    },
    {
      "test": "功能: 响应式设计",
      "success": true,
      "details": "适配不同屏幕尺寸",
      "response_data": null,
      "timestamp": "2025-08-09T18:59:55.565110"
    }
  ],
  "api_responses": {
    "主页面加载": {
      "status": 200,
      "size": 11436,
      "headers": {
        "Content-Type": "text/html",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "Date": "Sat, 09 Aug 2025 09:26:40 GMT",
        "Last-Modified": "Sat, 09 Aug 2025 09:16:52 GMT",
        "Server": "AmazonS3",
        "Content-Encoding": "br",
        "Etag": "W/\"94937e35194947c9cf5dac9e34543fe8\"",
        "Vary": "accept-encoding",
        "X-Cache": "Hit from cloudfront",
        "Via": "1.1 41a22a47e185e82ca2d2e0862b90fc66.cloudfront.net (CloudFront)",
        "X-Amz-Cf-Pop": "SFO5-P1",
        "X-Amz-Cf-Id": "7lc98PTq56zFikGNQ-aZAI9sqvUDKRwjh0h_eejW9EdojGAL0q7qng==",
        "Age": "1984"
      },
      "checks": {
        "HTML结构": true,
        "聊天容器": true,
        "侧边栏": true,
        "JavaScript引用": true,
        "CSS引用": true,
        "API配置": true
      }
    },
    "资源: /static/css/style.css": {
      "status": 200,
      "size": 15116
    },
    "资源: /static/js/config.js": {
      "status": 200,
      "size": 1007
    },
    "资源: /static/js/api.js": {
      "status": 200,
      "size": 5004
    },
    "资源: /static/js/chat.js": {
      "status": 200,
      "size": 7919
    },
    "资源: /static/js/documents.js": {
      "status": 200,
      "size": 8250
    },
    "资源: /static/js/search.js": {
      "status": 200,
      "size": 3135
    },
    "资源: /static/js/app.js": {
      "status": 200,
      "size": 6280
    },
    "健康检查": {
      "status": "healthy",
      "timestamp": "2025-08-09T09:59:44.790484",
      "service": "RAG System Lambda",
      "version": "1.0.0"
    },
    "查询(无RAG)": {
      "answer": "Artificial Intelligence (AI) refers to the simulation of human intelligence in machines that are programmed to think and learn like humans. The goal of AI is to create systems that can perform tasks that typically require human-like intelligence, such as understanding natural language, recognizing patterns, making decisions, and solving problems.\n\nHere are some key components and types of AI:\n\n### Types of AI\n\n1. **Narrow AI (Weak AI)**:\n   - Designed to perform a specific task.\n   - Examples include voice assistants (like Siri and Alexa), recommendation algorithms (like those used by Netflix and Amazon), and image recognition systems.\n\n2. **General AI (Strong AI)**:\n   - Hypothetical; would perform any intellectual task that a human can do.\n   - This type of AI does not currently exist but is a long-term goal for some researchers.\n\n3. **Superintelligence**:\n   - An AI that surpasses human intelligence in all aspects.\n   - This is also a hypothetical concept and subject to much debate and speculation.\n\n### Key Components of AI\n\n1. **Machine Learning**:\n   - A subset of AI that involves training algorithms to make predictions or decisions based on data.\n   - Types include:\n     - **Supervised Learning**: Algorithms learn from labeled data.\n     - **Unsupervised Learning**: Algorithms find patterns in unlabeled data.\n     - **Reinforcement Learning**: Algorithms learn by trial and error, receiving rewards or penalties for actions.\n\n2. **Natural Language Processing (NLP)**:\n   - Enables machines to understand, interpret, and generate human language.\n   - Applications include translation services, sentiment analysis, and chatbots.\n\n3. **Computer Vision**:\n   - Allows machines to interpret and make decisions based on visual input.\n   - Applications include facial recognition, object detection, and autonomous vehicles.\n\n4. **Robotics**:\n   - Combines AI with physical machines to perform tasks in the physical world.\n   - Applications range from manufacturing automation to household robots.\n\n### Applications of AI\n\n- **Healthcare**: Diagnosis, treatment recommendations, and patient monitoring.\n- **Finance**: Fraud detection, algorithmic trading, and customer service.\n- **Transportation**: Autonomous vehicles, route optimization, and traffic management.\n- **Entertainment**: Personalized recommendations, content creation, and gaming.\n- **Customer Service**: Chatbots, automated support systems, and sentiment analysis.\n\n### Ethical Considerations\n\n- **Bias and Fairness**: Ensuring AI systems do not perpetuate or amplify existing biases.\n-",
      "query": "What is artificial intelligence?",
      "sources": [],
      "status": "success",
      "mode": "direct"
    },
    "查询(带RAG)": {
      "answer": "RAG (Retrieval-Augmented Generation) 是一种结合检索和生成的技术，旨在通过检索相关文档来增强语言模型的生成能力。具体来说，RAG系统的核心组件包括：\n\n1. **文档向量化**：将文档转换为向量表示，使其可以在向量空间中进行操作和比较。\n2. **向量数据库存储**：存储这些向量表示的文档，以便快速检索。\n3. **相似度搜索**：在向量数据库中进行相似度搜索，找到与输入查询最相关的文档。\n4. **语言模型生成**：使用检索到的相关文档作为背景信息，生成更准确和可追溯的答案。\n\n使用RAG的好处包括：\n- 减少模型幻觉，即生成不准确或不相关的答案。\n- 提供更准确和可追溯的答案，因为生成的内容基于实际的文档。\n- 特别适合知识密集型任务，如问答系统和信息检索。\n\n综上所述，RAG通过整合检索和生成两个过程，显著提升了语言模型在处理复杂任务时的表现。",
      "query": "What is RAG?",
      "sources": [
        {
          "content": "RAG (Retrieval-Augmented Generation) 是一种结合检索和生成的技术，通过检索相关文档来增强语言模型的生成能力。",
          "score": 0.95,
          "metadata": {
            "source": "rag_introduction.md",
            "page": 1
          }
        },
        {
          "content": "RAG系统的核心组件包括：文档向量化、向量数据库存储、相似度搜索和语言模型生成。",
          "score": 0.92,
          "metadata": {
            "source": "rag_components.md",
            "page": 2
          }
        },
        {
          "content": "使用RAG可以减少模型幻觉，提供更准确和可追溯的答案，特别适合知识密集型任务。",
          "score": 0.89,
          "metadata": {
            "source": "rag_benefits.md",
            "page": 1
          }
        },
        {
          "content": "Zilliz Cloud是一个全托管的向量数据库服务，基于Milvus开源项目，提供高性能的向量搜索能力。",
          "score": 0.87,
          "metadata": {
            "source": "zilliz_overview.md",
            "page": 1
          }
        },
        {
          "content": "Amazon Bedrock提供了多种基础模型，包括Nova、Claude、Titan等，可用于RAG系统的生成组件。",
          "score": 0.85,
          "metadata": {
            "source": "bedrock_models.md",
            "page": 3
          }
        }
      ],
      "status": "success",
      "mode": "rag"
    },
    "文档列表": {
      "status": "success",
      "data": [
        {
          "name": "2025/08/09/frontend_test.txt",
          "size": 36,
          "last_modified": "2025-08-09T09:41:35+00:00",
          "etag": "c98fec8ea089bfb0f2373b9078768325"
        },
        {
          "name": "2025/08/09/rag_knowledge.txt",
          "size": 295,
          "last_modified": "2025-08-09T09:41:35+00:00",
          "etag": "e22ffb47927965424a4abb7ff47e069d"
        },
        {
          "name": "2025/08/09/test_doc.txt",
          "size": 33,
          "last_modified": "2025-08-09T09:40:39+00:00",
          "etag": "32e426143773661bdf2495f6854e5fe6"
        },
        {
          "name": "2025/08/09/test_production.txt",
          "size": 31,
          "last_modified": "2025-08-09T09:59:23+00:00",
          "etag": "121f7580ea354e12b7baa7df7f4202b0"
        }
      ],
      "count": 4
    },
    "文档统计": {
      "status": "success",
      "data": {
        "name": "rag_collection",
        "num_entities": 40,
        "num_documents": 4,
        "total_size": 395,
        "dimension": 1024,
        "index_type": "IVF_FLAT",
        "metric_type": "L2",
        "last_updated": "2025-08-09T09:59:54.513324"
      }
    },
    "文档上传": {
      "status": "success",
      "message": "Document uploaded successfully",
      "filename": "test_cloudfront.txt",
      "s3_key": "documents/2025/08/09/test_cloudfront.txt",
      "timestamp": "2025-08-09T09:59:54.779293"
    },
    "CORS /health": {
      "status": 403,
      "cors_headers": {
        "Access-Control-Allow-Origin": null,
        "Access-Control-Allow-Methods": null,
        "Access-Control-Allow-Headers": null
      }
    },
    "CORS /query": {
      "status": 403,
      "cors_headers": {
        "Access-Control-Allow-Origin": null,
        "Access-Control-Allow-Methods": null,
        "Access-Control-Allow-Headers": null
      }
    },
    "CORS /documents": {
      "status": 200,
      "cors_headers": {
        "Access-Control-Allow-Origin": "*",
        "Access-Control-Allow-Methods": "GET,POST,DELETE,OPTIONS",
        "Access-Control-Allow-Headers": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token"
      }
    }
  }
}